# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Chat implements Node {
  id: ID!
  imageURL: String
  title: String!
  message(where: MessageWhereInput): Message
}

type Coin implements Node {
  id: ID!
  imageURL: String
  name: String!
  text: String
  tag(where: CoinTagWhereInput): CoinTag
  startAt: DateTime!
  finishAt: DateTime!
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
}

type CoinTag implements Node {
  id: ID!
  name: String!
  coin(where: CoinWhereInput, orderBy: CoinOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Coin!]
}

type Message implements Node {
  id: ID!
  user: String!
  text: String!
  chat(where: ChatWhereInput): Chat
  createdAt: DateTime!
  updateAt: DateTime
}

type Post implements Node {
  id: ID!
  imageURL: String
  title: String!
  text: String
  tags(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostTag!]
  category(where: PostCategoryWhereInput): PostCategory
  updateAt: DateTime
  createdAt: DateTime!
  weblink: String
  source: String
}

type PostCategory implements Node {
  id: ID!
  post(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  title: String!
}

type PostTag implements Node {
  id: ID!
  name: String!
  post(where: PostWhereInput): Post
}


#
# Other Types
#

type AggregateChat {
  count: Int!
}

type AggregateCoin {
  count: Int!
}

type AggregateCoinTag {
  count: Int!
}

type AggregateMessage {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregatePostCategory {
  count: Int!
}

type AggregatePostTag {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type ChatConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ChatEdge]!
  aggregate: AggregateChat!
}

input ChatCreateInput {
  imageURL: String
  title: String!
  message: MessageCreateOneWithoutChatInput
}

input ChatCreateOneWithoutMessageInput {
  create: ChatCreateWithoutMessageInput
  connect: ChatWhereUniqueInput
}

input ChatCreateWithoutMessageInput {
  imageURL: String
  title: String!
}

"""
An edge in a connection.
"""
type ChatEdge {
  """
  The item at the end of the edge.
  """
  node: Chat!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ChatOrderByInput {
  id_ASC
  id_DESC
  imageURL_ASC
  imageURL_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ChatPreviousValues {
  id: ID!
  imageURL: String
  title: String!
}

type ChatSubscriptionPayload {
  mutation: MutationType!
  node: Chat
  updatedFields: [String!]
  previousValues: ChatPreviousValues
}

input ChatSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ChatSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ChatSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ChatWhereInput
}

input ChatUpdateInput {
  imageURL: String
  title: String
  message: MessageUpdateOneWithoutChatInput
}

input ChatUpdateOneWithoutMessageInput {
  create: ChatCreateWithoutMessageInput
  connect: ChatWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ChatUpdateWithoutMessageDataInput
  upsert: ChatUpsertWithoutMessageInput
}

input ChatUpdateWithoutMessageDataInput {
  imageURL: String
  title: String
}

input ChatUpsertWithoutMessageInput {
  update: ChatUpdateWithoutMessageDataInput!
  create: ChatCreateWithoutMessageInput!
}

input ChatWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ChatWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ChatWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  imageURL: String
  """
  All values that are not equal to given value.
  """
  imageURL_not: String
  """
  All values that are contained in given list.
  """
  imageURL_in: [String!]
  """
  All values that are not contained in given list.
  """
  imageURL_not_in: [String!]
  """
  All values less than the given value.
  """
  imageURL_lt: String
  """
  All values less than or equal the given value.
  """
  imageURL_lte: String
  """
  All values greater than the given value.
  """
  imageURL_gt: String
  """
  All values greater than or equal the given value.
  """
  imageURL_gte: String
  """
  All values containing the given string.
  """
  imageURL_contains: String
  """
  All values not containing the given string.
  """
  imageURL_not_contains: String
  """
  All values starting with the given string.
  """
  imageURL_starts_with: String
  """
  All values not starting with the given string.
  """
  imageURL_not_starts_with: String
  """
  All values ending with the given string.
  """
  imageURL_ends_with: String
  """
  All values not ending with the given string.
  """
  imageURL_not_ends_with: String
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  message: MessageWhereInput
}

input ChatWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type CoinConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CoinEdge]!
  aggregate: AggregateCoin!
}

input CoinCreateInput {
  imageURL: String
  name: String!
  text: String
  startAt: DateTime!
  finishAt: DateTime!
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
  tag: CoinTagCreateOneWithoutCoinInput
}

input CoinCreateManyWithoutTagInput {
  create: [CoinCreateWithoutTagInput!]
  connect: [CoinWhereUniqueInput!]
}

input CoinCreateWithoutTagInput {
  imageURL: String
  name: String!
  text: String
  startAt: DateTime!
  finishAt: DateTime!
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
}

"""
An edge in a connection.
"""
type CoinEdge {
  """
  The item at the end of the edge.
  """
  node: Coin!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CoinOrderByInput {
  id_ASC
  id_DESC
  imageURL_ASC
  imageURL_DESC
  name_ASC
  name_DESC
  text_ASC
  text_DESC
  startAt_ASC
  startAt_DESC
  finishAt_ASC
  finishAt_DESC
  symbol_ASC
  symbol_DESC
  initialPrice_ASC
  initialPrice_DESC
  tokenSupply_ASC
  tokenSupply_DESC
  platform_ASC
  platform_DESC
  type_ASC
  type_DESC
  whitelist_ASC
  whitelist_DESC
  supplyRatio_ASC
  supplyRatio_DESC
  Accepting_ASC
  Accepting_DESC
  listedOn_ASC
  listedOn_DESC
  homepage_ASC
  homepage_DESC
  whitePaper_ASC
  whitePaper_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CoinPreviousValues {
  id: ID!
  imageURL: String
  name: String!
  text: String
  startAt: DateTime!
  finishAt: DateTime!
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
}

type CoinSubscriptionPayload {
  mutation: MutationType!
  node: Coin
  updatedFields: [String!]
  previousValues: CoinPreviousValues
}

input CoinSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CoinSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CoinSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CoinWhereInput
}

"""
A connection to a list of items.
"""
type CoinTagConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CoinTagEdge]!
  aggregate: AggregateCoinTag!
}

input CoinTagCreateInput {
  name: String!
  coin: CoinCreateManyWithoutTagInput
}

input CoinTagCreateOneWithoutCoinInput {
  create: CoinTagCreateWithoutCoinInput
  connect: CoinTagWhereUniqueInput
}

input CoinTagCreateWithoutCoinInput {
  name: String!
}

"""
An edge in a connection.
"""
type CoinTagEdge {
  """
  The item at the end of the edge.
  """
  node: CoinTag!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CoinTagOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CoinTagPreviousValues {
  id: ID!
  name: String!
}

type CoinTagSubscriptionPayload {
  mutation: MutationType!
  node: CoinTag
  updatedFields: [String!]
  previousValues: CoinTagPreviousValues
}

input CoinTagSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CoinTagSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CoinTagSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CoinTagWhereInput
}

input CoinTagUpdateInput {
  name: String
  coin: CoinUpdateManyWithoutTagInput
}

input CoinTagUpdateOneWithoutCoinInput {
  create: CoinTagCreateWithoutCoinInput
  connect: CoinTagWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CoinTagUpdateWithoutCoinDataInput
  upsert: CoinTagUpsertWithoutCoinInput
}

input CoinTagUpdateWithoutCoinDataInput {
  name: String
}

input CoinTagUpsertWithoutCoinInput {
  update: CoinTagUpdateWithoutCoinDataInput!
  create: CoinTagCreateWithoutCoinInput!
}

input CoinTagWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CoinTagWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CoinTagWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  coin_every: CoinWhereInput
  coin_some: CoinWhereInput
  coin_none: CoinWhereInput
}

input CoinTagWhereUniqueInput {
  id: ID
}

input CoinUpdateInput {
  imageURL: String
  name: String
  text: String
  startAt: DateTime
  finishAt: DateTime
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
  tag: CoinTagUpdateOneWithoutCoinInput
}

input CoinUpdateManyWithoutTagInput {
  create: [CoinCreateWithoutTagInput!]
  connect: [CoinWhereUniqueInput!]
  disconnect: [CoinWhereUniqueInput!]
  delete: [CoinWhereUniqueInput!]
  update: [CoinUpdateWithWhereUniqueWithoutTagInput!]
  upsert: [CoinUpsertWithWhereUniqueWithoutTagInput!]
}

input CoinUpdateWithoutTagDataInput {
  imageURL: String
  name: String
  text: String
  startAt: DateTime
  finishAt: DateTime
  symbol: String
  initialPrice: String
  tokenSupply: String
  platform: String
  type: String
  whitelist: String
  supplyRatio: String
  Accepting: String
  listedOn: String
  homepage: String
  whitePaper: String
}

input CoinUpdateWithWhereUniqueWithoutTagInput {
  where: CoinWhereUniqueInput!
  data: CoinUpdateWithoutTagDataInput!
}

input CoinUpsertWithWhereUniqueWithoutTagInput {
  where: CoinWhereUniqueInput!
  update: CoinUpdateWithoutTagDataInput!
  create: CoinCreateWithoutTagInput!
}

input CoinWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CoinWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CoinWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  imageURL: String
  """
  All values that are not equal to given value.
  """
  imageURL_not: String
  """
  All values that are contained in given list.
  """
  imageURL_in: [String!]
  """
  All values that are not contained in given list.
  """
  imageURL_not_in: [String!]
  """
  All values less than the given value.
  """
  imageURL_lt: String
  """
  All values less than or equal the given value.
  """
  imageURL_lte: String
  """
  All values greater than the given value.
  """
  imageURL_gt: String
  """
  All values greater than or equal the given value.
  """
  imageURL_gte: String
  """
  All values containing the given string.
  """
  imageURL_contains: String
  """
  All values not containing the given string.
  """
  imageURL_not_contains: String
  """
  All values starting with the given string.
  """
  imageURL_starts_with: String
  """
  All values not starting with the given string.
  """
  imageURL_not_starts_with: String
  """
  All values ending with the given string.
  """
  imageURL_ends_with: String
  """
  All values not ending with the given string.
  """
  imageURL_not_ends_with: String
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  text: String
  """
  All values that are not equal to given value.
  """
  text_not: String
  """
  All values that are contained in given list.
  """
  text_in: [String!]
  """
  All values that are not contained in given list.
  """
  text_not_in: [String!]
  """
  All values less than the given value.
  """
  text_lt: String
  """
  All values less than or equal the given value.
  """
  text_lte: String
  """
  All values greater than the given value.
  """
  text_gt: String
  """
  All values greater than or equal the given value.
  """
  text_gte: String
  """
  All values containing the given string.
  """
  text_contains: String
  """
  All values not containing the given string.
  """
  text_not_contains: String
  """
  All values starting with the given string.
  """
  text_starts_with: String
  """
  All values not starting with the given string.
  """
  text_not_starts_with: String
  """
  All values ending with the given string.
  """
  text_ends_with: String
  """
  All values not ending with the given string.
  """
  text_not_ends_with: String
  startAt: DateTime
  """
  All values that are not equal to given value.
  """
  startAt_not: DateTime
  """
  All values that are contained in given list.
  """
  startAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  startAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  startAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  startAt_lte: DateTime
  """
  All values greater than the given value.
  """
  startAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  startAt_gte: DateTime
  finishAt: DateTime
  """
  All values that are not equal to given value.
  """
  finishAt_not: DateTime
  """
  All values that are contained in given list.
  """
  finishAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  finishAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  finishAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  finishAt_lte: DateTime
  """
  All values greater than the given value.
  """
  finishAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  finishAt_gte: DateTime
  symbol: String
  """
  All values that are not equal to given value.
  """
  symbol_not: String
  """
  All values that are contained in given list.
  """
  symbol_in: [String!]
  """
  All values that are not contained in given list.
  """
  symbol_not_in: [String!]
  """
  All values less than the given value.
  """
  symbol_lt: String
  """
  All values less than or equal the given value.
  """
  symbol_lte: String
  """
  All values greater than the given value.
  """
  symbol_gt: String
  """
  All values greater than or equal the given value.
  """
  symbol_gte: String
  """
  All values containing the given string.
  """
  symbol_contains: String
  """
  All values not containing the given string.
  """
  symbol_not_contains: String
  """
  All values starting with the given string.
  """
  symbol_starts_with: String
  """
  All values not starting with the given string.
  """
  symbol_not_starts_with: String
  """
  All values ending with the given string.
  """
  symbol_ends_with: String
  """
  All values not ending with the given string.
  """
  symbol_not_ends_with: String
  initialPrice: String
  """
  All values that are not equal to given value.
  """
  initialPrice_not: String
  """
  All values that are contained in given list.
  """
  initialPrice_in: [String!]
  """
  All values that are not contained in given list.
  """
  initialPrice_not_in: [String!]
  """
  All values less than the given value.
  """
  initialPrice_lt: String
  """
  All values less than or equal the given value.
  """
  initialPrice_lte: String
  """
  All values greater than the given value.
  """
  initialPrice_gt: String
  """
  All values greater than or equal the given value.
  """
  initialPrice_gte: String
  """
  All values containing the given string.
  """
  initialPrice_contains: String
  """
  All values not containing the given string.
  """
  initialPrice_not_contains: String
  """
  All values starting with the given string.
  """
  initialPrice_starts_with: String
  """
  All values not starting with the given string.
  """
  initialPrice_not_starts_with: String
  """
  All values ending with the given string.
  """
  initialPrice_ends_with: String
  """
  All values not ending with the given string.
  """
  initialPrice_not_ends_with: String
  tokenSupply: String
  """
  All values that are not equal to given value.
  """
  tokenSupply_not: String
  """
  All values that are contained in given list.
  """
  tokenSupply_in: [String!]
  """
  All values that are not contained in given list.
  """
  tokenSupply_not_in: [String!]
  """
  All values less than the given value.
  """
  tokenSupply_lt: String
  """
  All values less than or equal the given value.
  """
  tokenSupply_lte: String
  """
  All values greater than the given value.
  """
  tokenSupply_gt: String
  """
  All values greater than or equal the given value.
  """
  tokenSupply_gte: String
  """
  All values containing the given string.
  """
  tokenSupply_contains: String
  """
  All values not containing the given string.
  """
  tokenSupply_not_contains: String
  """
  All values starting with the given string.
  """
  tokenSupply_starts_with: String
  """
  All values not starting with the given string.
  """
  tokenSupply_not_starts_with: String
  """
  All values ending with the given string.
  """
  tokenSupply_ends_with: String
  """
  All values not ending with the given string.
  """
  tokenSupply_not_ends_with: String
  platform: String
  """
  All values that are not equal to given value.
  """
  platform_not: String
  """
  All values that are contained in given list.
  """
  platform_in: [String!]
  """
  All values that are not contained in given list.
  """
  platform_not_in: [String!]
  """
  All values less than the given value.
  """
  platform_lt: String
  """
  All values less than or equal the given value.
  """
  platform_lte: String
  """
  All values greater than the given value.
  """
  platform_gt: String
  """
  All values greater than or equal the given value.
  """
  platform_gte: String
  """
  All values containing the given string.
  """
  platform_contains: String
  """
  All values not containing the given string.
  """
  platform_not_contains: String
  """
  All values starting with the given string.
  """
  platform_starts_with: String
  """
  All values not starting with the given string.
  """
  platform_not_starts_with: String
  """
  All values ending with the given string.
  """
  platform_ends_with: String
  """
  All values not ending with the given string.
  """
  platform_not_ends_with: String
  type: String
  """
  All values that are not equal to given value.
  """
  type_not: String
  """
  All values that are contained in given list.
  """
  type_in: [String!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [String!]
  """
  All values less than the given value.
  """
  type_lt: String
  """
  All values less than or equal the given value.
  """
  type_lte: String
  """
  All values greater than the given value.
  """
  type_gt: String
  """
  All values greater than or equal the given value.
  """
  type_gte: String
  """
  All values containing the given string.
  """
  type_contains: String
  """
  All values not containing the given string.
  """
  type_not_contains: String
  """
  All values starting with the given string.
  """
  type_starts_with: String
  """
  All values not starting with the given string.
  """
  type_not_starts_with: String
  """
  All values ending with the given string.
  """
  type_ends_with: String
  """
  All values not ending with the given string.
  """
  type_not_ends_with: String
  whitelist: String
  """
  All values that are not equal to given value.
  """
  whitelist_not: String
  """
  All values that are contained in given list.
  """
  whitelist_in: [String!]
  """
  All values that are not contained in given list.
  """
  whitelist_not_in: [String!]
  """
  All values less than the given value.
  """
  whitelist_lt: String
  """
  All values less than or equal the given value.
  """
  whitelist_lte: String
  """
  All values greater than the given value.
  """
  whitelist_gt: String
  """
  All values greater than or equal the given value.
  """
  whitelist_gte: String
  """
  All values containing the given string.
  """
  whitelist_contains: String
  """
  All values not containing the given string.
  """
  whitelist_not_contains: String
  """
  All values starting with the given string.
  """
  whitelist_starts_with: String
  """
  All values not starting with the given string.
  """
  whitelist_not_starts_with: String
  """
  All values ending with the given string.
  """
  whitelist_ends_with: String
  """
  All values not ending with the given string.
  """
  whitelist_not_ends_with: String
  supplyRatio: String
  """
  All values that are not equal to given value.
  """
  supplyRatio_not: String
  """
  All values that are contained in given list.
  """
  supplyRatio_in: [String!]
  """
  All values that are not contained in given list.
  """
  supplyRatio_not_in: [String!]
  """
  All values less than the given value.
  """
  supplyRatio_lt: String
  """
  All values less than or equal the given value.
  """
  supplyRatio_lte: String
  """
  All values greater than the given value.
  """
  supplyRatio_gt: String
  """
  All values greater than or equal the given value.
  """
  supplyRatio_gte: String
  """
  All values containing the given string.
  """
  supplyRatio_contains: String
  """
  All values not containing the given string.
  """
  supplyRatio_not_contains: String
  """
  All values starting with the given string.
  """
  supplyRatio_starts_with: String
  """
  All values not starting with the given string.
  """
  supplyRatio_not_starts_with: String
  """
  All values ending with the given string.
  """
  supplyRatio_ends_with: String
  """
  All values not ending with the given string.
  """
  supplyRatio_not_ends_with: String
  Accepting: String
  """
  All values that are not equal to given value.
  """
  Accepting_not: String
  """
  All values that are contained in given list.
  """
  Accepting_in: [String!]
  """
  All values that are not contained in given list.
  """
  Accepting_not_in: [String!]
  """
  All values less than the given value.
  """
  Accepting_lt: String
  """
  All values less than or equal the given value.
  """
  Accepting_lte: String
  """
  All values greater than the given value.
  """
  Accepting_gt: String
  """
  All values greater than or equal the given value.
  """
  Accepting_gte: String
  """
  All values containing the given string.
  """
  Accepting_contains: String
  """
  All values not containing the given string.
  """
  Accepting_not_contains: String
  """
  All values starting with the given string.
  """
  Accepting_starts_with: String
  """
  All values not starting with the given string.
  """
  Accepting_not_starts_with: String
  """
  All values ending with the given string.
  """
  Accepting_ends_with: String
  """
  All values not ending with the given string.
  """
  Accepting_not_ends_with: String
  listedOn: String
  """
  All values that are not equal to given value.
  """
  listedOn_not: String
  """
  All values that are contained in given list.
  """
  listedOn_in: [String!]
  """
  All values that are not contained in given list.
  """
  listedOn_not_in: [String!]
  """
  All values less than the given value.
  """
  listedOn_lt: String
  """
  All values less than or equal the given value.
  """
  listedOn_lte: String
  """
  All values greater than the given value.
  """
  listedOn_gt: String
  """
  All values greater than or equal the given value.
  """
  listedOn_gte: String
  """
  All values containing the given string.
  """
  listedOn_contains: String
  """
  All values not containing the given string.
  """
  listedOn_not_contains: String
  """
  All values starting with the given string.
  """
  listedOn_starts_with: String
  """
  All values not starting with the given string.
  """
  listedOn_not_starts_with: String
  """
  All values ending with the given string.
  """
  listedOn_ends_with: String
  """
  All values not ending with the given string.
  """
  listedOn_not_ends_with: String
  homepage: String
  """
  All values that are not equal to given value.
  """
  homepage_not: String
  """
  All values that are contained in given list.
  """
  homepage_in: [String!]
  """
  All values that are not contained in given list.
  """
  homepage_not_in: [String!]
  """
  All values less than the given value.
  """
  homepage_lt: String
  """
  All values less than or equal the given value.
  """
  homepage_lte: String
  """
  All values greater than the given value.
  """
  homepage_gt: String
  """
  All values greater than or equal the given value.
  """
  homepage_gte: String
  """
  All values containing the given string.
  """
  homepage_contains: String
  """
  All values not containing the given string.
  """
  homepage_not_contains: String
  """
  All values starting with the given string.
  """
  homepage_starts_with: String
  """
  All values not starting with the given string.
  """
  homepage_not_starts_with: String
  """
  All values ending with the given string.
  """
  homepage_ends_with: String
  """
  All values not ending with the given string.
  """
  homepage_not_ends_with: String
  whitePaper: String
  """
  All values that are not equal to given value.
  """
  whitePaper_not: String
  """
  All values that are contained in given list.
  """
  whitePaper_in: [String!]
  """
  All values that are not contained in given list.
  """
  whitePaper_not_in: [String!]
  """
  All values less than the given value.
  """
  whitePaper_lt: String
  """
  All values less than or equal the given value.
  """
  whitePaper_lte: String
  """
  All values greater than the given value.
  """
  whitePaper_gt: String
  """
  All values greater than or equal the given value.
  """
  whitePaper_gte: String
  """
  All values containing the given string.
  """
  whitePaper_contains: String
  """
  All values not containing the given string.
  """
  whitePaper_not_contains: String
  """
  All values starting with the given string.
  """
  whitePaper_starts_with: String
  """
  All values not starting with the given string.
  """
  whitePaper_not_starts_with: String
  """
  All values ending with the given string.
  """
  whitePaper_ends_with: String
  """
  All values not ending with the given string.
  """
  whitePaper_not_ends_with: String
  tag: CoinTagWhereInput
}

input CoinWhereUniqueInput {
  id: ID
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

"""
A connection to a list of items.
"""
type MessageConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [MessageEdge]!
  aggregate: AggregateMessage!
}

input MessageCreateInput {
  user: String!
  text: String!
  updateAt: DateTime
  chat: ChatCreateOneWithoutMessageInput
}

input MessageCreateOneWithoutChatInput {
  create: MessageCreateWithoutChatInput
  connect: MessageWhereUniqueInput
}

input MessageCreateWithoutChatInput {
  user: String!
  text: String!
  updateAt: DateTime
}

"""
An edge in a connection.
"""
type MessageEdge {
  """
  The item at the end of the edge.
  """
  node: Message!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum MessageOrderByInput {
  id_ASC
  id_DESC
  user_ASC
  user_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  updateAt_ASC
  updateAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MessagePreviousValues {
  id: ID!
  user: String!
  text: String!
  createdAt: DateTime!
  updateAt: DateTime
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  node: Message
  updatedFields: [String!]
  previousValues: MessagePreviousValues
}

input MessageSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [MessageSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [MessageSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MessageWhereInput
}

input MessageUpdateInput {
  user: String
  text: String
  updateAt: DateTime
  chat: ChatUpdateOneWithoutMessageInput
}

input MessageUpdateOneWithoutChatInput {
  create: MessageCreateWithoutChatInput
  connect: MessageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: MessageUpdateWithoutChatDataInput
  upsert: MessageUpsertWithoutChatInput
}

input MessageUpdateWithoutChatDataInput {
  user: String
  text: String
  updateAt: DateTime
}

input MessageUpsertWithoutChatInput {
  update: MessageUpdateWithoutChatDataInput!
  create: MessageCreateWithoutChatInput!
}

input MessageWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [MessageWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [MessageWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  user: String
  """
  All values that are not equal to given value.
  """
  user_not: String
  """
  All values that are contained in given list.
  """
  user_in: [String!]
  """
  All values that are not contained in given list.
  """
  user_not_in: [String!]
  """
  All values less than the given value.
  """
  user_lt: String
  """
  All values less than or equal the given value.
  """
  user_lte: String
  """
  All values greater than the given value.
  """
  user_gt: String
  """
  All values greater than or equal the given value.
  """
  user_gte: String
  """
  All values containing the given string.
  """
  user_contains: String
  """
  All values not containing the given string.
  """
  user_not_contains: String
  """
  All values starting with the given string.
  """
  user_starts_with: String
  """
  All values not starting with the given string.
  """
  user_not_starts_with: String
  """
  All values ending with the given string.
  """
  user_ends_with: String
  """
  All values not ending with the given string.
  """
  user_not_ends_with: String
  text: String
  """
  All values that are not equal to given value.
  """
  text_not: String
  """
  All values that are contained in given list.
  """
  text_in: [String!]
  """
  All values that are not contained in given list.
  """
  text_not_in: [String!]
  """
  All values less than the given value.
  """
  text_lt: String
  """
  All values less than or equal the given value.
  """
  text_lte: String
  """
  All values greater than the given value.
  """
  text_gt: String
  """
  All values greater than or equal the given value.
  """
  text_gte: String
  """
  All values containing the given string.
  """
  text_contains: String
  """
  All values not containing the given string.
  """
  text_not_contains: String
  """
  All values starting with the given string.
  """
  text_starts_with: String
  """
  All values not starting with the given string.
  """
  text_not_starts_with: String
  """
  All values ending with the given string.
  """
  text_ends_with: String
  """
  All values not ending with the given string.
  """
  text_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updateAt: DateTime
  """
  All values that are not equal to given value.
  """
  updateAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updateAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updateAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updateAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updateAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updateAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updateAt_gte: DateTime
  chat: ChatWhereInput
}

input MessageWhereUniqueInput {
  id: ID
}

type Mutation {
  createPost(data: PostCreateInput!): Post!
  createPostTag(data: PostTagCreateInput!): PostTag!
  createPostCategory(data: PostCategoryCreateInput!): PostCategory!
  createCoin(data: CoinCreateInput!): Coin!
  createCoinTag(data: CoinTagCreateInput!): CoinTag!
  createChat(data: ChatCreateInput!): Chat!
  createMessage(data: MessageCreateInput!): Message!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updatePostTag(data: PostTagUpdateInput!, where: PostTagWhereUniqueInput!): PostTag
  updatePostCategory(data: PostCategoryUpdateInput!, where: PostCategoryWhereUniqueInput!): PostCategory
  updateCoin(data: CoinUpdateInput!, where: CoinWhereUniqueInput!): Coin
  updateCoinTag(data: CoinTagUpdateInput!, where: CoinTagWhereUniqueInput!): CoinTag
  updateChat(data: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat
  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  deletePost(where: PostWhereUniqueInput!): Post
  deletePostTag(where: PostTagWhereUniqueInput!): PostTag
  deletePostCategory(where: PostCategoryWhereUniqueInput!): PostCategory
  deleteCoin(where: CoinWhereUniqueInput!): Coin
  deleteCoinTag(where: CoinTagWhereUniqueInput!): CoinTag
  deleteChat(where: ChatWhereUniqueInput!): Chat
  deleteMessage(where: MessageWhereUniqueInput!): Message
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertPostTag(where: PostTagWhereUniqueInput!, create: PostTagCreateInput!, update: PostTagUpdateInput!): PostTag!
  upsertPostCategory(where: PostCategoryWhereUniqueInput!, create: PostCategoryCreateInput!, update: PostCategoryUpdateInput!): PostCategory!
  upsertCoin(where: CoinWhereUniqueInput!, create: CoinCreateInput!, update: CoinUpdateInput!): Coin!
  upsertCoinTag(where: CoinTagWhereUniqueInput!, create: CoinTagCreateInput!, update: CoinTagUpdateInput!): CoinTag!
  upsertChat(where: ChatWhereUniqueInput!, create: ChatCreateInput!, update: ChatUpdateInput!): Chat!
  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!
  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput): BatchPayload!
  updateManyPostTags(data: PostTagUpdateInput!, where: PostTagWhereInput): BatchPayload!
  updateManyPostCategories(data: PostCategoryUpdateInput!, where: PostCategoryWhereInput): BatchPayload!
  updateManyCoins(data: CoinUpdateInput!, where: CoinWhereInput): BatchPayload!
  updateManyCoinTags(data: CoinTagUpdateInput!, where: CoinTagWhereInput): BatchPayload!
  updateManyChats(data: ChatUpdateInput!, where: ChatWhereInput): BatchPayload!
  updateManyMessages(data: MessageUpdateInput!, where: MessageWhereInput): BatchPayload!
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  deleteManyPostTags(where: PostTagWhereInput): BatchPayload!
  deleteManyPostCategories(where: PostCategoryWhereInput): BatchPayload!
  deleteManyCoins(where: CoinWhereInput): BatchPayload!
  deleteManyCoinTags(where: CoinTagWhereInput): BatchPayload!
  deleteManyChats(where: ChatWhereInput): BatchPayload!
  deleteManyMessages(where: MessageWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A connection to a list of items.
"""
type PostCategoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PostCategoryEdge]!
  aggregate: AggregatePostCategory!
}

input PostCategoryCreateInput {
  title: String!
  post: PostCreateManyWithoutCategoryInput
}

input PostCategoryCreateOneWithoutPostInput {
  create: PostCategoryCreateWithoutPostInput
  connect: PostCategoryWhereUniqueInput
}

input PostCategoryCreateWithoutPostInput {
  title: String!
}

"""
An edge in a connection.
"""
type PostCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: PostCategory!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PostCategoryOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PostCategoryPreviousValues {
  id: ID!
  title: String!
}

type PostCategorySubscriptionPayload {
  mutation: MutationType!
  node: PostCategory
  updatedFields: [String!]
  previousValues: PostCategoryPreviousValues
}

input PostCategorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostCategorySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostCategorySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostCategoryWhereInput
}

input PostCategoryUpdateInput {
  title: String
  post: PostUpdateManyWithoutCategoryInput
}

input PostCategoryUpdateOneWithoutPostInput {
  create: PostCategoryCreateWithoutPostInput
  connect: PostCategoryWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PostCategoryUpdateWithoutPostDataInput
  upsert: PostCategoryUpsertWithoutPostInput
}

input PostCategoryUpdateWithoutPostDataInput {
  title: String
}

input PostCategoryUpsertWithoutPostInput {
  update: PostCategoryUpdateWithoutPostDataInput!
  create: PostCategoryCreateWithoutPostInput!
}

input PostCategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostCategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostCategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  post_every: PostWhereInput
  post_some: PostWhereInput
  post_none: PostWhereInput
}

input PostCategoryWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type PostConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  imageURL: String
  title: String!
  text: String
  updateAt: DateTime
  weblink: String
  source: String
  tags: PostTagCreateManyInput
  category: PostCategoryCreateOneWithoutPostInput
}

input PostCreateManyWithoutCategoryInput {
  create: [PostCreateWithoutCategoryInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateOneInput {
  create: PostCreateInput
  connect: PostWhereUniqueInput
}

input PostCreateWithoutCategoryInput {
  imageURL: String
  title: String!
  text: String
  updateAt: DateTime
  weblink: String
  source: String
  tags: PostTagCreateManyInput
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge.
  """
  node: Post!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  imageURL_ASC
  imageURL_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
  updateAt_ASC
  updateAt_DESC
  createdAt_ASC
  createdAt_DESC
  weblink_ASC
  weblink_DESC
  source_ASC
  source_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PostPreviousValues {
  id: ID!
  imageURL: String
  title: String!
  text: String
  updateAt: DateTime
  createdAt: DateTime!
  weblink: String
  source: String
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

"""
A connection to a list of items.
"""
type PostTagConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PostTagEdge]!
  aggregate: AggregatePostTag!
}

input PostTagCreateInput {
  name: String!
  post: PostCreateOneInput
}

input PostTagCreateManyInput {
  create: [PostTagCreateInput!]
  connect: [PostTagWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type PostTagEdge {
  """
  The item at the end of the edge.
  """
  node: PostTag!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PostTagOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PostTagPreviousValues {
  id: ID!
  name: String!
}

type PostTagSubscriptionPayload {
  mutation: MutationType!
  node: PostTag
  updatedFields: [String!]
  previousValues: PostTagPreviousValues
}

input PostTagSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostTagSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostTagSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostTagWhereInput
}

input PostTagUpdateDataInput {
  name: String
  post: PostUpdateOneInput
}

input PostTagUpdateInput {
  name: String
  post: PostUpdateOneInput
}

input PostTagUpdateManyInput {
  create: [PostTagCreateInput!]
  connect: [PostTagWhereUniqueInput!]
  disconnect: [PostTagWhereUniqueInput!]
  delete: [PostTagWhereUniqueInput!]
  update: [PostTagUpdateWithWhereUniqueNestedInput!]
  upsert: [PostTagUpsertWithWhereUniqueNestedInput!]
}

input PostTagUpdateWithWhereUniqueNestedInput {
  where: PostTagWhereUniqueInput!
  data: PostTagUpdateDataInput!
}

input PostTagUpsertWithWhereUniqueNestedInput {
  where: PostTagWhereUniqueInput!
  update: PostTagUpdateDataInput!
  create: PostTagCreateInput!
}

input PostTagWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostTagWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostTagWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  post: PostWhereInput
}

input PostTagWhereUniqueInput {
  id: ID
}

input PostUpdateDataInput {
  imageURL: String
  title: String
  text: String
  updateAt: DateTime
  weblink: String
  source: String
  tags: PostTagUpdateManyInput
  category: PostCategoryUpdateOneWithoutPostInput
}

input PostUpdateInput {
  imageURL: String
  title: String
  text: String
  updateAt: DateTime
  weblink: String
  source: String
  tags: PostTagUpdateManyInput
  category: PostCategoryUpdateOneWithoutPostInput
}

input PostUpdateManyWithoutCategoryInput {
  create: [PostCreateWithoutCategoryInput!]
  connect: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutCategoryInput!]
}

input PostUpdateOneInput {
  create: PostCreateInput
  connect: PostWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PostUpdateDataInput
  upsert: PostUpsertNestedInput
}

input PostUpdateWithoutCategoryDataInput {
  imageURL: String
  title: String
  text: String
  updateAt: DateTime
  weblink: String
  source: String
  tags: PostTagUpdateManyInput
}

input PostUpdateWithWhereUniqueWithoutCategoryInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutCategoryDataInput!
}

input PostUpsertNestedInput {
  update: PostUpdateDataInput!
  create: PostCreateInput!
}

input PostUpsertWithWhereUniqueWithoutCategoryInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutCategoryDataInput!
  create: PostCreateWithoutCategoryInput!
}

input PostWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  imageURL: String
  """
  All values that are not equal to given value.
  """
  imageURL_not: String
  """
  All values that are contained in given list.
  """
  imageURL_in: [String!]
  """
  All values that are not contained in given list.
  """
  imageURL_not_in: [String!]
  """
  All values less than the given value.
  """
  imageURL_lt: String
  """
  All values less than or equal the given value.
  """
  imageURL_lte: String
  """
  All values greater than the given value.
  """
  imageURL_gt: String
  """
  All values greater than or equal the given value.
  """
  imageURL_gte: String
  """
  All values containing the given string.
  """
  imageURL_contains: String
  """
  All values not containing the given string.
  """
  imageURL_not_contains: String
  """
  All values starting with the given string.
  """
  imageURL_starts_with: String
  """
  All values not starting with the given string.
  """
  imageURL_not_starts_with: String
  """
  All values ending with the given string.
  """
  imageURL_ends_with: String
  """
  All values not ending with the given string.
  """
  imageURL_not_ends_with: String
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  text: String
  """
  All values that are not equal to given value.
  """
  text_not: String
  """
  All values that are contained in given list.
  """
  text_in: [String!]
  """
  All values that are not contained in given list.
  """
  text_not_in: [String!]
  """
  All values less than the given value.
  """
  text_lt: String
  """
  All values less than or equal the given value.
  """
  text_lte: String
  """
  All values greater than the given value.
  """
  text_gt: String
  """
  All values greater than or equal the given value.
  """
  text_gte: String
  """
  All values containing the given string.
  """
  text_contains: String
  """
  All values not containing the given string.
  """
  text_not_contains: String
  """
  All values starting with the given string.
  """
  text_starts_with: String
  """
  All values not starting with the given string.
  """
  text_not_starts_with: String
  """
  All values ending with the given string.
  """
  text_ends_with: String
  """
  All values not ending with the given string.
  """
  text_not_ends_with: String
  updateAt: DateTime
  """
  All values that are not equal to given value.
  """
  updateAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updateAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updateAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updateAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updateAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updateAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updateAt_gte: DateTime
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  weblink: String
  """
  All values that are not equal to given value.
  """
  weblink_not: String
  """
  All values that are contained in given list.
  """
  weblink_in: [String!]
  """
  All values that are not contained in given list.
  """
  weblink_not_in: [String!]
  """
  All values less than the given value.
  """
  weblink_lt: String
  """
  All values less than or equal the given value.
  """
  weblink_lte: String
  """
  All values greater than the given value.
  """
  weblink_gt: String
  """
  All values greater than or equal the given value.
  """
  weblink_gte: String
  """
  All values containing the given string.
  """
  weblink_contains: String
  """
  All values not containing the given string.
  """
  weblink_not_contains: String
  """
  All values starting with the given string.
  """
  weblink_starts_with: String
  """
  All values not starting with the given string.
  """
  weblink_not_starts_with: String
  """
  All values ending with the given string.
  """
  weblink_ends_with: String
  """
  All values not ending with the given string.
  """
  weblink_not_ends_with: String
  source: String
  """
  All values that are not equal to given value.
  """
  source_not: String
  """
  All values that are contained in given list.
  """
  source_in: [String!]
  """
  All values that are not contained in given list.
  """
  source_not_in: [String!]
  """
  All values less than the given value.
  """
  source_lt: String
  """
  All values less than or equal the given value.
  """
  source_lte: String
  """
  All values greater than the given value.
  """
  source_gt: String
  """
  All values greater than or equal the given value.
  """
  source_gte: String
  """
  All values containing the given string.
  """
  source_contains: String
  """
  All values not containing the given string.
  """
  source_not_contains: String
  """
  All values starting with the given string.
  """
  source_starts_with: String
  """
  All values not starting with the given string.
  """
  source_not_starts_with: String
  """
  All values ending with the given string.
  """
  source_ends_with: String
  """
  All values not ending with the given string.
  """
  source_not_ends_with: String
  tags_every: PostTagWhereInput
  tags_some: PostTagWhereInput
  tags_none: PostTagWhereInput
  category: PostCategoryWhereInput
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postTags(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostTag]!
  postCategories(where: PostCategoryWhereInput, orderBy: PostCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostCategory]!
  coins(where: CoinWhereInput, orderBy: CoinOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Coin]!
  coinTags(where: CoinTagWhereInput, orderBy: CoinTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CoinTag]!
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat]!
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!
  post(where: PostWhereUniqueInput!): Post
  postTag(where: PostTagWhereUniqueInput!): PostTag
  postCategory(where: PostCategoryWhereUniqueInput!): PostCategory
  coin(where: CoinWhereUniqueInput!): Coin
  coinTag(where: CoinTagWhereUniqueInput!): CoinTag
  chat(where: ChatWhereUniqueInput!): Chat
  message(where: MessageWhereUniqueInput!): Message
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  postTagsConnection(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostTagConnection!
  postCategoriesConnection(where: PostCategoryWhereInput, orderBy: PostCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostCategoryConnection!
  coinsConnection(where: CoinWhereInput, orderBy: CoinOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CoinConnection!
  coinTagsConnection(where: CoinTagWhereInput, orderBy: CoinTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CoinTagConnection!
  chatsConnection(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChatConnection!
  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Subscription {
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  postTag(where: PostTagSubscriptionWhereInput): PostTagSubscriptionPayload
  postCategory(where: PostCategorySubscriptionWhereInput): PostCategorySubscriptionPayload
  coin(where: CoinSubscriptionWhereInput): CoinSubscriptionPayload
  coinTag(where: CoinTagSubscriptionWhereInput): CoinTagSubscriptionPayload
  chat(where: ChatSubscriptionWhereInput): ChatSubscriptionPayload
  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload
}
